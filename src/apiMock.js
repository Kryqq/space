import axios from "axios";
import MockAdapter from "axios-mock-adapter";

const mock = new MockAdapter(axios, { delayResponse: 1000 });

const articles = [
  {
    id: 1,
    date: "2025-06-12",
    title: "Заголовок статьи",
    description:
      "Краткое описание статьи или ее начало. Может занимать больше трех строк в высоту. В таком случае предложение заканчивается многоточием...",
    author: "Иван Иванов",
  },
  {
    id: 2,
    date: "2025-06-12",
    title: "Заголовок статьи",
    description:
      "Краткое описание статьи или ее начало. Может занимать больше трех строк в высоту. В таком случае предложение заканчивается многоточием...",
    author: "Василий Васильев",
  },
  {
    id: 3,
    date: "2025-06-13",
    title: "Заголовок статьи",
    description:
      "Краткое описание статьи или ее начало. Может занимать больше трех строк в высоту. В таком случае предложение заканчивается многоточием...",
    author: "Николай Николаев",
  },
  {
    id: 4,
    date: "2025-04-14",
    title: "Заголовок статьи",
    description:
      "Краткое описание статьи или ее начало. Может занимать больше трех строк в высоту. В таком случае предложение заканчивается многоточием...",
    author: "Александр Александров",
  },
  {
    id: 5,
    date: "2025-06-14",
    title: "Заголовок статьи",
    description:
      "Краткое описание статьи или ее начало. Может занимать больше трех строк в высоту. В таком случае предложение заканчивается многоточием...",
    author: "Павел Павлов",
  },
  {
    id: 6,
    date: "2025-06-14",
    title: "Заголовок статьи",
    description:
      "Краткое описание статьи или ее начало. Может занимать больше трех строк в высоту. В таком случае предложение заканчивается многоточием...",
    author: "Иван Иванов",
  },
];

const authors = [
  "Все авторы",
  "Василий Васильев",
  "Николай Николаев",
  "Александр Александров",
  "Павел Павлов",
  "Иван Иванов",
];

mock.onGet("/api/authors").reply(200, authors);

mock.onGet("/api/articles").reply(200, articles);
